{"version":3,"file":"refresh.min.js","sources":["../src/refresh.js"],"sourcesContent":["/*\n * Refresh content when changed on the system\n *\n * @package    block_deft\n * @module     block_deft/refresh\n * @copyright  2022 Daniel Thies <dethies@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Fragment from \"core/fragment\";\nimport Log from \"core/log\";\nimport Socket from \"block_deft/socket\";\nimport Templates from \"core/templates\";\n\nexport default {\n\n    throttled: false,\n\n    lastupdate: 0,\n\n    contextid: null,\n\n    token: null,\n\n    throttle: null,\n\n    /**\n     * Listen to WebSocket and refresh content\n     *\n     * @param {int} contextid Context id of block\n     * @param {string} selector Content location to replace\n     * @param {string} token Authentication token to connect service\n     * @param {int} throttle Throttle dely in ms\n     */\n    init: function(contextid, selector, token, throttle) {\n        this.contextid = contextid;\n        this.selector = selector;\n        this.throttle = throttle;\n        Socket.open(contextid, token).subscribe(() => {\n            this.refresh();\n        });\n    },\n\n    /**\n     * Refresh content\n     *\n     */\n    refresh: function() {\n        let content = document.querySelector(this.selector).parentNode,\n            component = content.closest('[data-component]')\n                && content.closest('[data-component]').getAttribute('data-component')\n                || 'block_deft',\n            data = {};\n        if (!content) {\n            return;\n        }\n\n        if (\n            (this.lastupdate + this.throttle > Date.now())\n            || (document.activeElement.closest(this.selector) && document.activeElement.closest('select'))\n        ) {\n            if (\n                !this.throttled\n                || (this.lastupdate + this.throttle < Date.now())\n            ) {\n                setTimeout(() => {\n                    this.refresh();\n                }, Math.max(this.lastupdate + this.throttle - Date.now(), 40));\n                this.throttled = true;\n            }\n\n            return;\n        }\n\n        document.querySelector(this.selector)\n            .querySelectorAll('[data-type=\"comments\"] .block_deft_comments.expanded')\n            .forEach((opencomments) => {\n                data.opencomments = data.opencomments || [];\n                data.opencomments.push(opencomments.closest('[data-task]').getAttribute('data-task'));\n            });\n\n        Fragment.loadFragment(\n            component,\n            'content',\n            this.contextid,\n            {\n                jsondata: JSON.stringify(data)\n            }\n        ).done((html, js) => {\n            content.querySelectorAll('.block_deft_comments').forEach((comments) => {\n                const position = comments.scrollTop,\n                    task = comments.closest('[data-task]').getAttribute('data-task');\n                setTimeout(() => {\n                    content.querySelectorAll('[data-task=\"' + task + '\"]').forEach((task) => {\n                        task.querySelector('.block_deft_comments').scrollTo({\n                            top: position\n                        });\n                    });\n                });\n            });\n            content.querySelectorAll('[data-summary]').forEach((summary) => {\n                const height = summary.offsetHeight,\n                    task = summary.getAttribute('data-summary');\n                setTimeout(() => {\n                    content.querySelectorAll('[data-summary=\"' + task + '\"]').forEach((summary) => {\n                        summary.setAttribute('style', 'min-height: ' + height + 'px;');\n                    });\n                });\n            });\n            Templates.replaceNodeContents(content, html, js);\n        }).catch(Log.debug);\n\n        this.throttled = false;\n        this.lastupdate = Date.now();\n    }\n};\n"],"names":["throttled","lastupdate","contextid","token","throttle","init","selector","open","subscribe","refresh","content","document","querySelector","this","parentNode","component","closest","getAttribute","data","Date","now","activeElement","setTimeout","Math","max","querySelectorAll","forEach","opencomments","push","loadFragment","jsondata","JSON","stringify","done","html","js","comments","position","scrollTop","task","scrollTo","top","summary","height","offsetHeight","setAttribute","replaceNodeContents","catch","Log","debug"],"mappings":";;;;;;;;sQAce,CAEXA,WAAW,EAEXC,WAAY,EAEZC,UAAW,KAEXC,MAAO,KAEPC,SAAU,KAUVC,KAAM,SAASH,UAAWI,SAAUH,MAAOC,eAClCF,UAAYA,eACZI,SAAWA,cACXF,SAAWA,yBACTG,KAAKL,UAAWC,OAAOK,WAAU,UAC/BC,cAQbA,QAAS,eACDC,QAAUC,SAASC,cAAcC,KAAKP,UAAUQ,WAChDC,UAAYL,QAAQM,QAAQ,qBACrBN,QAAQM,QAAQ,oBAAoBC,aAAa,mBACjD,aACPC,KAAO,GACNR,UAKAG,KAAKZ,WAAaY,KAAKT,SAAWe,KAAKC,OACpCT,SAASU,cAAcL,QAAQH,KAAKP,WAAaK,SAASU,cAAcL,QAAQ,YAG/EH,KAAKb,WACFa,KAAKZ,WAAaY,KAAKT,SAAWe,KAAKC,SAE3CE,YAAW,UACFb,YACNc,KAAKC,IAAIX,KAAKZ,WAAaY,KAAKT,SAAWe,KAAKC,MAAO,UACrDpB,WAAY,IAMzBW,SAASC,cAAcC,KAAKP,UACvBmB,iBAAiB,wDACjBC,SAASC,eACNT,KAAKS,aAAeT,KAAKS,cAAgB,GACzCT,KAAKS,aAAaC,KAAKD,aAAaX,QAAQ,eAAeC,aAAa,mCAGvEY,aACLd,UACA,UACAF,KAAKX,UACL,CACI4B,SAAUC,KAAKC,UAAUd,QAE/Be,MAAK,CAACC,KAAMC,MACVzB,QAAQe,iBAAiB,wBAAwBC,SAASU,iBAChDC,SAAWD,SAASE,UACtBC,KAAOH,SAASpB,QAAQ,eAAeC,aAAa,aACxDK,YAAW,KACPZ,QAAQe,iBAAiB,eAAiBc,KAAO,MAAMb,SAASa,OAC5DA,KAAK3B,cAAc,wBAAwB4B,SAAS,CAChDC,IAAKJ,oBAKrB3B,QAAQe,iBAAiB,kBAAkBC,SAASgB,gBAC1CC,OAASD,QAAQE,aACnBL,KAAOG,QAAQzB,aAAa,gBAChCK,YAAW,KACPZ,QAAQe,iBAAiB,kBAAoBc,KAAO,MAAMb,SAASgB,UAC/DA,QAAQG,aAAa,QAAS,eAAiBF,OAAS,mCAI1DG,oBAAoBpC,QAASwB,KAAMC,OAC9CY,MAAMC,aAAIC,YAERjD,WAAY,OACZC,WAAakB,KAAKC"}