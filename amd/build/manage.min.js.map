{"version":3,"file":"manage.min.js","sources":["../src/manage.js"],"sourcesContent":["/*\n * Manage task user interface handlers\n *\n * @package    block_deft\n * @module     block_deft/manage\n * @copyright  2022 Daniel Thies <dethies@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport Log from 'core/log';\nimport {get_string as getString} from 'core/str';\n\nvar contextid;\n\n/**\n * Submit data for processing\n *\n * @param {Event} e Event object\n */\nconst submitForm = (e) => {\n    Log.debug('Form submitted');\n    Log.debug(e.detail);\n    if (e.detail && e.detail.html) {\n        Templates.replaceNodeContents(\n            document.querySelector('.tasks'),\n            e.detail.html\n        );\n    }\n};\n\n/**\n * Handle submission actions\n *\n * @param {Event} e Event object\n */\nconst handleSubmit = (e) => {\n    if (e.target.matches('form')) {\n        let formdata = new FormData(e.target),\n            id = formdata.get('id'),\n            type = formdata.get('type') || e.submitter.value,\n            title,\n            action = e.submitter.name === 'action' && e.submitter.value;\n        e.preventDefault();\n        e.stopPropagation();\n        if (action === 'delete' || action === 'move') {\n            type = action;\n        }\n        switch (action) {\n            case 'delete':\n                title = getString('confirm', 'core');\n                break;\n            case 'move':\n                title = getString('move', 'core');\n                break;\n            case 'status':\n                title = getString('changestatus', 'block_deft');\n                break;\n            default:\n                title = getString('edit' + type, 'block_deft');\n                break;\n        }\n        Log.debug('Create ' + type);\n        const modalForm = new ModalForm({\n            formClass: \"block_deft\\\\form\\\\\" + (action === 'status' ? \"status_\" : \"edit_\") + type,\n            args: {\n                contextid: contextid,\n                id: id\n            },\n            modalConfig: {\n                title: title\n            }\n        });\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, submitForm);\n        modalForm.show();\n    }\n};\n\n/**\n * Initialize listeners\n *\n * @param {int} id Context id of block\n */\nexport const init = (id) => {\n    'use strict';\n\n    contextid = id;\n\n    document.removeEventListener('submit', handleSubmit);\n    document.addEventListener('submit', handleSubmit);\n};\n"],"names":["contextid","submitForm","e","debug","detail","html","replaceNodeContents","document","querySelector","handleSubmit","target","matches","title","formdata","FormData","id","get","type","submitter","value","action","name","preventDefault","stopPropagation","modalForm","ModalForm","formClass","args","modalConfig","addEventListener","events","FORM_SUBMITTED","show","removeEventListener"],"mappings":";;;;;;;;SAcIA,2NAOEC,WAAcC,iBACZC,MAAM,+BACNA,MAAMD,EAAEE,QACRF,EAAEE,QAAUF,EAAEE,OAAOC,yBACXC,oBACNC,SAASC,cAAc,UACvBN,EAAEE,OAAOC,OAUfI,aAAgBP,OACdA,EAAEQ,OAAOC,QAAQ,QAAS,KAItBC,MAHAC,SAAW,IAAIC,SAASZ,EAAEQ,QAC1BK,GAAKF,SAASG,IAAI,MAClBC,KAAOJ,SAASG,IAAI,SAAWd,EAAEgB,UAAUC,MAE3CC,OAA8B,WAArBlB,EAAEgB,UAAUG,MAAqBnB,EAAEgB,UAAUC,aAC1DjB,EAAEoB,iBACFpB,EAAEqB,kBACa,WAAXH,QAAkC,SAAXA,SACvBH,KAAOG,QAEHA,YACC,SACDR,OAAQ,mBAAU,UAAW,kBAE5B,OACDA,OAAQ,mBAAU,OAAQ,kBAEzB,SACDA,OAAQ,mBAAU,eAAgB,4BAGlCA,OAAQ,mBAAU,OAASK,KAAM,2BAGrCd,MAAM,UAAYc,YAChBO,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,sBAAmC,WAAXN,OAAsB,UAAY,SAAWH,KAChFU,KAAM,CACF3B,UAAWA,UACXe,GAAIA,IAERa,YAAa,CACThB,MAAOA,SAGfY,UAAUK,iBAAiBL,UAAUM,OAAOC,eAAgB9B,YAC5DuB,UAAUQ,uBASGjB,KAGjBf,UAAYe,GAEZR,SAAS0B,oBAAoB,SAAUxB,cACvCF,SAASsB,iBAAiB,SAAUpB"}