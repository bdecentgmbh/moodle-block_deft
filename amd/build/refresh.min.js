define("block_deft/refresh",["exports","core/fragment","core/notification","block_deft/socket","core/templates"],(function(_exports,_fragment,_notification,_socket,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/*
   * Refresh content when changed on the system
   *
   * @package    block_deft
   * @module     block_deft/refresh
   * @copyright  2022 Daniel Thies <dethies@gmail.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_fragment=_interopRequireDefault(_fragment),_notification=_interopRequireDefault(_notification),_socket=_interopRequireDefault(_socket),_templates=_interopRequireDefault(_templates);var _default={throttled:!1,lastupdate:0,init:function(contextid,selector,token,throttle){_socket.default.open(contextid,token).subscribe((()=>{this.refresh(contextid,selector,throttle)}))},refresh:function(contextid,selector,throttle){let content=document.querySelector(selector).parentNode;content&&(this.lastupdate+throttle>Date.now()?this.throttled||(setTimeout((()=>{this.refresh(contextid,selector,throttle)}),this.lastupdate+throttle-Date.now()),this.throttled=!0):(_fragment.default.loadFragment("block_deft","content",contextid,{}).done(_templates.default.replaceNodeContents.bind(_templates.default,content)).fail(_notification.default.exception),this.throttled=!1,this.lastupdate=Date.now()))}};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=refresh.min.js.map