{"version":3,"file":"test.min.js","sources":["../src/test.js"],"sourcesContent":["/*\n * Test the connection with message service\n *\n * @package    block_deft\n * @module     block_deft/test\n * @copyright  2022 Daniel Thies <dethies@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from \"core/ajax\";\nimport Fragment from \"core/fragment\";\nimport Log from \"core/log\";\nimport Notification from \"core/notification\";\nimport Socket from \"block_deft/socket\";\nimport {get_string as getString} from 'core/str';\nimport * as Toast from 'core/toast';\n\nexport default {\n\n    /**\n     * Test connection\n     *\n     * @param {int} contextid Context id of block\n     */\n    init: function(contextid) {\n        Log.debug('Requesting token');\n        Ajax.call([{\n            methodname: 'block_deft_renew_token',\n            args: {contextid: contextid},\n            done: (token) => {\n                getString('authorizationreceived', 'block_deft').done((message) => {\n                    Toast.add(message, {'type': 'info'});\n                });\n                Socket.open(contextid, token.token).subscribe(() => {\n                    getString('messagereceived', 'block_deft').done((message) => {\n                        Toast.add(message, {'type': 'success'});\n                    });\n                });\n\n                setTimeout(() => {\n                    Fragment.loadFragment(\n                        'block_deft',\n                        'test',\n                        contextid,\n                        {}\n                    ).done((message) => {\n                        Toast.add(message, {'type': 'info'});\n                    }).fail(Notification.exception);\n                }, 500);\n            },\n            fail: Notification.exception\n        }]);\n    }\n};\n"],"names":["init","contextid","debug","call","methodname","args","done","token","message","Toast","add","open","subscribe","setTimeout","loadFragment","fail","Notification","exception"],"mappings":";;;;;;;;08BAiBe,CAOXA,KAAM,SAASC,wBACPC,MAAM,kCACLC,KAAK,CAAC,CACPC,WAAY,yBACZC,KAAM,CAACJ,UAAWA,WAClBK,KAAOC,4BACO,wBAAyB,cAAcD,MAAME,UACnDC,MAAMC,IAAIF,QAAS,MAAS,4BAEzBG,KAAKV,UAAWM,MAAMA,OAAOK,WAAU,yBAChC,kBAAmB,cAAcN,MAAME,UAC7CC,MAAMC,IAAIF,QAAS,MAAS,kBAIpCK,YAAW,uBACEC,aACL,aACA,OACAb,UACA,IACFK,MAAME,UACJC,MAAMC,IAAIF,QAAS,MAAS,YAC7BO,KAAKC,sBAAaC,aACtB,MAEPF,KAAMC,sBAAaC"}